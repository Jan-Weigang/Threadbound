"""Added States

Revision ID: b16bf14802bd
Revises: fc9d34c9d990
Create Date: 2025-02-04 12:18:23.798733

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b16bf14802bd'
down_revision: Union[str, None] = 'fc9d34c9d990'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event_overlaps',
    sa.Column('event_id', sa.String(length=21), nullable=False),
    sa.Column('overlapping_event_id', sa.String(length=21), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.ForeignKeyConstraint(['overlapping_event_id'], ['event.id'], ),
    sa.PrimaryKeyConstraint('event_id', 'overlapping_event_id')
    )
    op.add_column('event', sa.Column('template_id', sa.String(length=21), nullable=True))
    op.add_column('event', sa.Column('recurrence_rule', sa.Text(), nullable=True))
    op.add_column('event', sa.Column('is_published', sa.Boolean(), nullable=False))
    op.add_column('event', sa.Column('state_size', sa.Enum('NOT_SET', 'REQUESTED', 'APPROVED', 'DENIED', name='eventstate'), nullable=False))
    op.add_column('event', sa.Column('state_overlap', sa.Enum('NOT_SET', 'REQUESTED', 'APPROVED', 'DENIED', name='eventstate'), nullable=False))
    op.create_foreign_key(None, 'event', 'event', ['template_id'], ['id'])
    op.drop_column('event', 'recurring_cycle')
    op.drop_column('event', 'recurring_interval')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('event', sa.Column('recurring_interval', sa.INTEGER(), nullable=True))
    op.add_column('event', sa.Column('recurring_cycle', sa.VARCHAR(length=10), nullable=True))
    op.drop_constraint(None, 'event', type_='foreignkey')
    op.drop_column('event', 'state_overlap')
    op.drop_column('event', 'state_size')
    op.drop_column('event', 'is_published')
    op.drop_column('event', 'recurrence_rule')
    op.drop_column('event', 'template_id')
    op.drop_table('event_overlaps')
    # ### end Alembic commands ###
